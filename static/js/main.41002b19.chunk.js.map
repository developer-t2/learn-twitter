{"version":3,"sources":["components/Navigation.js","firebaseConfig.js","components/Twit.js","components/CreateTwit.js","routes/Home.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Router.js","components/App.js","index.js"],"names":["memo","user","to","replace","displayName","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fb","auth","store","storage","twit","isOwner","useState","text","newTwit","setNewTwit","edit","setEdit","onSubmit","useCallback","e","a","preventDefault","doc","id","update","console","error","message","onChange","value","target","onEditToggle","prevEdit","onDeleteClick","window","confirm","delete","imageUrl","refFromURL","type","required","placeholder","onClick","src","alt","width","CreateTwit","setTwit","imageFile","setImageFile","storageRef","ref","child","uid","uuidv4","putString","image","getDownloadURL","collection","add","createdAt","Date","now","onFileClick","onFileChange","files","length","reader","FileReader","readAsDataURL","addEventListener","result","currentTarget","onClearClick","maxLength","accept","twits","setTwits","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","err","code","key","updateUser","newDisplayName","setNewDisplayName","history","useHistory","onLogoutClick","signOut","push","updateProfile","initialUser","email","password","AuthForm","setUser","newAccount","setNewAccount","setError","onToggleAccount","prevNewAccount","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","exact","path","init","setInit","onAuthStateChanged","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41002b19.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ user }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\" replace>\r\n            Home\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\" replace>\r\n            {user.displayName}'s Profile\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default memo(Navigation);\r\n","import * as firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fb = firebase;\r\n\r\nexport const auth = firebase.auth();\r\nexport const store = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport { storage, store } from '../firebaseConfig';\r\n\r\nconst Twit = ({ twit, isOwner }) => {\r\n  const [newTwit, setNewTwit] = useState(twit.text);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const onSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n\r\n      try {\r\n        await store.doc(`twits/${twit.id}`).update({\r\n          text: newTwit,\r\n        });\r\n\r\n        setEdit(false);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    },\r\n    [twit.id, newTwit]\r\n  );\r\n\r\n  const onChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n\r\n    setNewTwit(value);\r\n  }, []);\r\n\r\n  const onEditToggle = useCallback(() => setEdit((prevEdit) => !prevEdit), []);\r\n\r\n  const onDeleteClick = useCallback(async () => {\r\n    const isDelete = window.confirm('Are you sure you want to delete this twit?');\r\n\r\n    if (isDelete) {\r\n      try {\r\n        await store.doc(`twits/${twit.id}`).delete();\r\n\r\n        if (twit.imageUrl) {\r\n          await storage.refFromURL(twit.imageUrl).delete();\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    }\r\n  }, [twit.id, twit.imageUrl]);\r\n\r\n  return (\r\n    <li>\r\n      {edit && isOwner ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Edit your twit\"\r\n              value={newTwit}\r\n              onChange={onChange}\r\n            />\r\n\r\n            <button type=\"submit\">Update</button>\r\n          </form>\r\n\r\n          <button onClick={onEditToggle}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{twit.text}</h4>\r\n          {twit.imageUrl && <img src={twit.imageUrl} alt={'Twit'} width=\"100px\" />}\r\n\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onEditToggle}>Edit</button>\r\n              <button onClick={onDeleteClick}>Delete</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(Twit);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { storage, store } from '../firebaseConfig';\r\n\r\nconst CreateTwit = ({ user }) => {\r\n  const [twit, setTwit] = useState('');\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  const onSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      e.target[1].value = null;\r\n\r\n      let imageUrl = null;\r\n\r\n      try {\r\n        if (imageFile) {\r\n          const storageRef = storage.ref().child(`${user.uid}/${uuidv4()}`);\r\n\r\n          const image = await storageRef.putString(imageFile, 'data_url');\r\n          imageUrl = await image.ref.getDownloadURL();\r\n        }\r\n\r\n        await store.collection('twits').add({\r\n          uid: user.uid,\r\n          createdAt: Date.now(),\r\n          text: twit,\r\n          imageUrl,\r\n        });\r\n\r\n        setTwit('');\r\n        setImageFile(null);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    },\r\n    [user.uid, imageFile, twit, setTwit]\r\n  );\r\n\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value } = e.target;\r\n\r\n      setTwit(value);\r\n    },\r\n    [setTwit]\r\n  );\r\n\r\n  const onFileClick = useCallback((e) => {\r\n    e.target.value = null;\r\n  }, []);\r\n\r\n  const onFileChange = useCallback((e) => {\r\n    const { files } = e.target;\r\n\r\n    if (files.length !== 0) {\r\n      const reader = new FileReader();\r\n\r\n      reader.readAsDataURL(files[0]);\r\n\r\n      reader.addEventListener('loadend', (e) => {\r\n        const { result } = e.currentTarget;\r\n\r\n        setImageFile(result);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onClearClick = useCallback(() => {\r\n    setImageFile(null);\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n        required\r\n        value={twit}\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onClick={onFileClick} onChange={onFileChange} />\r\n      <button type=\"submit\">Twit</button>\r\n\r\n      {imageFile && (\r\n        <div>\r\n          <img src={imageFile} alt=\"Preview\" width=\"100px\" />\r\n\r\n          <button onClick={onClearClick}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateTwit;\r\n","import React, { memo, useEffect, useState } from 'react';\r\n\r\nimport { store } from '../firebaseConfig';\r\nimport Twit from '../components/Twit';\r\nimport CreateTwit from '../components/CreateTwit';\r\n\r\nconst Home = ({ user }) => {\r\n  const [twits, setTwits] = useState([]);\r\n\r\n  useEffect(() => {\r\n    store\r\n      .collection('twits')\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot(\r\n        (snapshot) => {\r\n          setTwits(\r\n            snapshot.docs.map((doc) => ({\r\n              ...doc.data(),\r\n              id: doc.id,\r\n            }))\r\n          );\r\n        },\r\n        (err) => {\r\n          if (err.code !== 'permission-denied') {\r\n            console.error(err.message);\r\n          }\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CreateTwit user={user} />\r\n\r\n      <ul>\r\n        {twits.map((twit) => (\r\n          <Twit key={twit.id} twit={twit} isOwner={twit.uid === user.uid} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Home);\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebaseConfig';\r\n\r\nconst Profile = ({ user, updateUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(user.displayName);\r\n  const history = useHistory();\r\n\r\n  const onLogoutClick = useCallback(async () => {\r\n    try {\r\n      await auth.signOut();\r\n\r\n      history.push('/');\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }, [history]);\r\n\r\n  const onChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n\r\n    setNewDisplayName(value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (user.displayName !== newDisplayName) {\r\n        await user.updateProfile({\r\n          displayName: newDisplayName,\r\n        });\r\n\r\n        updateUser();\r\n      }\r\n    },\r\n    [user, newDisplayName, updateUser]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"text\" placeholder=\"Display Name\" value={newDisplayName} onChange={onChange} />\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n      <button onClick={onLogoutClick}>Logout</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Profile);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { auth } from '../firebaseConfig';\r\n\r\nconst initialUser = { email: '', password: '' };\r\n\r\nconst AuthForm = () => {\r\n  const [user, setUser] = useState(initialUser);\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const { email, password } = user;\r\n\r\n  const onToggleAccount = useCallback(() => setNewAccount((prevNewAccount) => !prevNewAccount), []);\r\n\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n\r\n      setUser({\r\n        ...user,\r\n        [name]: value,\r\n      });\r\n    },\r\n    [user]\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n\r\n      try {\r\n        if (newAccount) {\r\n          await auth.createUserWithEmailAndPassword(email, password);\r\n        } else {\r\n          await auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    },\r\n    [newAccount, email, password]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          required\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          placeholder=\"Password\"\r\n          required\r\n          onChange={onChange}\r\n        />\r\n        <button type=\"submit\">{newAccount ? 'Create Account' : 'Login'}</button>\r\n        {error}\r\n      </form>\r\n\r\n      <span onClick={onToggleAccount}>{newAccount ? 'Signin' : 'Create Account'}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { memo, useCallback } from 'react';\r\nimport AuthForm from '../components/AuthForm';\r\nimport { fb, auth } from '../firebaseConfig';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = useCallback(async (e) => {\r\n    const { name } = e.target;\r\n\r\n    let provider = null;\r\n\r\n    if (name === 'google') {\r\n      provider = new fb.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new fb.auth.GithubAuthProvider();\r\n    }\r\n\r\n    try {\r\n      await auth.signInWithPopup(provider);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n\r\n      <div>\r\n        <button name=\"google\" onClick={onSocialClick}>\r\n          Continue with Google\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick}>\r\n          Continue with GitHub\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Auth);\r\n","import React, { memo } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Navigation from './Navigation';\r\nimport Home from '../routes/Home';\r\nimport Profile from '../routes/Profile';\r\nimport Auth from '../routes/Auth';\r\n\r\nconst Router = ({ user, updateUser }) => {\r\n  return (\r\n    <HashRouter>\r\n      {user && <Navigation user={user} />}\r\n      <Switch>\r\n        {user ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home user={user} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile user={user} updateUser={updateUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default memo(Router);\r\n","import React, { memo, useCallback, useEffect, useState } from 'react';\n\nimport Router from './Router';\n\nimport { auth } from '../firebaseConfig';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUser(null);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const updateUser = useCallback(() => {\n    const user = auth.currentUser;\n\n    setUser({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }, []);\n\n  return <>{init ? <Router user={user} updateUser={updateUser} /> : 'Loading...'}</>;\n}\n\nexport default memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}